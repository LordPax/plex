services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    environment:
      - DOMAIN=${DOMAIN:? [Nginx] need a domain}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ${CONTAINER_PATH}/nginx/certs:/etc/nginx/certs
      - ./entrypoint.sh:/entrypoint.sh
    entrypoint: ["/entrypoint.sh"]
    command: ["nginx", "-g", "daemon off;"]
    restart: unless-stopped
    depends_on:
      - jellyfin
      - ombi
      - prowlarr
      - radarr
      - sonarr
      - transmission-openvpn

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE:-Europe/Paris}
    volumes:
      - ${CONTAINER_PATH? nee container path}/jellyfin/library:/config
      - ${DATA_PATH? need data path}/tvseries:/data/tvshows
      - ${DATA_PATH? need data path}/movies:/data/movies
    ports:
      - 8096:8096
    restart: unless-stopped
    depends_on:
      - transmission-openvpn

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE:-Europe/Paris}
    volumes:
      - ${CONTAINER_PATH:? need container path}/sonarr/data:/config
      - ${DATA_PATH:? need data path}/tvseries:/tv
      - ${DATA_PATH:? need data path}/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    depends_on:
      - prowlarr
      - transmission-openvpn

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE:-Europe/Paris}
    volumes:
      - ${CONTAINER_PATH:? need container path}/radarr/data:/config
      - ${DATA_PATH:? need data path}/movies:/movies
      - ${DATA_PATH:? need data path}/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    depends_on:
      - prowlarr
      - transmission-openvpn

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE:-Europe/Paris}
    volumes:
      - ${CONTAINER_PATH:? need container path}/prowlarr/data:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE:-Europe/Paris}
    volumes:
      - ${CONTAINER_PATH? need container path}/ombi/config:/config
    ports:
      - 3579:3579
    restart: unless-stopped
    depends_on:
      - jellyfin

  transmission-openvpn:
    image: haugene/transmission-openvpn
    container_name: transmission-openvpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    volumes:
      - ${CONTAINER_PATH:? need container path}/transmission/config/:/config
      - ${DATA_PATH:? need data path}/downloads/:/data
    environment:
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER:? [Transmission] need a provider}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG:? [Transmission] need a config file}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME:? [Transmission] need openvpn username}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:? [Transmission] need openvpn password}
      - LOCAL_NETWORK=${OPENVPN_LOCAL_NETWORK:? [Transmission] need a local network}
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_USERNAME:? [Transmission] need ui username}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_PASSWORD:? [Transmission] need ui password}
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - 9091:9091
    restart: unless-stopped
